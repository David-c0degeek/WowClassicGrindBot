@inject IWowScreen wowScreen
@inject IScreenImageProvider provider

@using SixLabors.ImageSharp
@using SixLabors.ImageSharp.PixelFormats
@using SixLabors.ImageSharp.Formats.Jpeg

<div class="card" @onclick="Toggle">
    @if (wowScreen.EnablePostProcess)
    {
        <img class="@(Stretch ? "img-filled" : "img-filled-half")" src="@provider.ScreenImage.ToBase64String(JpegFormat.Instance)" alt="Toggle preview!" />
    }
    else
    {
        <label class="oi oi-fullscreen-enter">  Toggle preview!</label>
    }
</div>

@code {

    [Parameter]
    public int Size { get; set; } = 1024;

    [Parameter]
    public bool Stretch { get; set; } = false;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            wowScreen.OnScreenChanged += this.ImageChanged;
        }
    }

    public void Dispose()
    {
        wowScreen.OnScreenChanged -= this.ImageChanged;
    }

    protected void Toggle()
    {
        wowScreen.EnablePostProcess = !wowScreen.EnablePostProcess;
    }

    private async void ImageChanged()
    {
        await base.InvokeAsync(StateHasChanged);
    }
}